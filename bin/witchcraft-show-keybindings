#!/bin/bash

# Define modifier flags as associative array for name lookup
# per https://github.com/hyprwm/Hyprland/blob/main/src/devices/IKeyboard.hpp#L13-L22
declare -A MODIFIER_NAMES=(
    [$((1 << 0))]="SHIFT"
    [$((1 << 1))]="CAPS"
    [$((1 << 2))]="CTRL"
    [$((1 << 3))]="ALT"
    [$((1 << 4))]="MOD2"
    [$((1 << 5))]="MOD3"
    [$((1 << 6))]="SUPER"
    [$((1 << 7))]="MOD5"
)

decode_modmask() {
    local modifiers=$1
    local result=()

    for bit in "${!MODIFIER_NAMES[@]}"; do
        if (( modifiers & bit )); then
            result+=("${MODIFIER_NAMES[$bit]}")
        fi
    done

    # Output all detected modifiers (plus-separated)
    echo "${result[*]}"
}

# Read live keybinds, not config file
OLD_IFS=$IFS
IFS=$'\n'
readarray -t KEYBINDS < <(hyprctl -j binds | jq -cr '.[]')
IFS=$OLD_IFS

# Loop over each keybind and pipe results to wofi for inspection/execution
# Format to send to wofi:
#
# <dispatcher> -- <arg> #<Modifier Keys> <Key> - <Description> via <arg>
# exec -- ghostty #SUPER return - Launch a Terminal via ghostty
# or
# exit -- #SUPER+ALT ESCAPE - Logout
#
# Wofi's pre-display-cmd looks for the '#' and prints everything after it
# in the wofi window. When we pipe that to `xargs hyprctl dispatch`, the
# Comment character ensures we ignore the description text and only executes
# the dispatcher + arg.
for keyconfig in "${KEYBINDS[@]}"; do
    # Use pipe '|' to delimit results
    IFS="|" read modmask key keycode description dispatcher arg < <(echo $(echo "$keyconfig" | jq -r '[.modmask, .key, .keycode, .description, .dispatcher, .arg] | join("|")'))
    keys=($(decode_modmask $modmask) $key)
    IFS="+"
    combo=$(echo "${keys[*]}")
    IFS=$OLD_IFS
    echo "$dispatcher -- $arg #$combo â†’ $description ($dispatcher $arg)"
done | flock --nonblock /tmp/.wofi.lock -c "wofi --width 60% --height 70% -d -i -p 'Hyprland Keybindings' -0 alphabetical --pre-display-cmd \"echo '%s' | cut -d'#' -f2\" | xargs hyprctl dispatch"